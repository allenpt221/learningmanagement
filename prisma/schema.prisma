// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  firstname String
  lastname String
  email     String   @unique
  username  String   @unique
  password  String
  type DepartmentType @default(CCS)
  image String @default("https://img.freepik.com/free-vector/blue-circle-with-white-user_78370-4707.jpg")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // relations
  posts Post[]
  likes Like[]
}

enum DepartmentType {
  CCS     @map("College of Computing Studies")
  CEA     @map("College of Engineering And Arts")
  CBS     @map("College of Business Studies")
}


model Post {
  id String @id @default(uuid())
  AuthorId String
  content String
  image String?
  department DepartmentType?
  createdAt DateTime @default(now())

  author User @relation(fields: [AuthorId], references: [id], onDelete: Cascade)
  likes Like[]
}

model Like {
  id String @id @default(uuid())
  postId String
  userId String
  createdAt DateTime @default(now())

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  post Post @relation(fields: [postId], references: [id], onDelete: Cascade)

   @@index([userId,postId])
   @@unique([userId, postId])

}



